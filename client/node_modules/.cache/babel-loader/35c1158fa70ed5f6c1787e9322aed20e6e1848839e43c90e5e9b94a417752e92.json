{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  error: null,\n  isLoading: false,\n  user: null,\n  isLoggedIn: false\n};\nconst userSlice = createSlice({\n  name: \"user\",\n  initialState,\n  reducers: {\n    signUpStart: state => {\n      state.isLoading = true;\n    },\n    signUpSuccess: (state, action) => {\n      state.isLoading = false;\n      state.user = action.payload;\n      state.error = null; // Clear the error state\n    },\n    signUpFailure: (state, action) => {\n      state.isLoading = false;\n      state.error = {\n        message: action.payload.message,\n        status: action.payload.response ? action.payload.response.status : null\n      };\n    },\n    loginStart: state => {\n      state.isLoading = true;\n    },\n    loginSuccess: (state, action) => {\n      state.isLoading = false;\n      state.user = action.payload;\n    },\n    loginFailure: (state, action) => {\n      state.isLoading = false;\n      state.error = action.payload;\n    },\n    updateStart: state => {\n      state.isLoading = true;\n    },\n    updateSuccess: (state, action) => {\n      state.user = action.payload;\n      state.isLoading = false;\n    },\n    updateFailure: (state, action) => {\n      state.error = action.payload;\n    }\n  }\n});\nexport const {\n  signUpStart,\n  signUpSuccess,\n  signUpFailure,\n  loginSuccess,\n  loginStart,\n  loginFailure,\n  updateStart,\n  updateSuccess,\n  updateFailure\n} = userSlice.actions;\nexport default userSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","error","isLoading","user","isLoggedIn","userSlice","name","reducers","signUpStart","state","signUpSuccess","action","payload","signUpFailure","message","status","response","loginStart","loginSuccess","loginFailure","updateStart","updateSuccess","updateFailure","actions","reducer"],"sources":["C:/Users/user/Desktop/real-state/client/src/redux/Slice/UserSlice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n  error: null,\r\n  isLoading: false,\r\n  user: null,\r\n  isLoggedIn: false,\r\n};\r\n\r\nconst userSlice = createSlice({\r\n  name: \"user\",\r\n  initialState,\r\n  reducers: {\r\n    signUpStart:(state)=>{\r\n      state.isLoading=true\r\n    },\r\n    signUpSuccess: (state, action) => {\r\n      state.isLoading = false;\r\n      state.user = action.payload;\r\n      state.error = null; // Clear the error state\r\n    },\r\n    \r\n    signUpFailure: (state, action) => {\r\n      state.isLoading=false\r\n      state.error = {\r\n        message: action.payload.message,\r\n        status: action.payload.response ? action.payload.response.status : null,\r\n      };\r\n    },\r\n    loginStart: (state) => {\r\n      state.isLoading = true;\r\n    },\r\n    loginSuccess: (state, action) => {\r\n      state.isLoading = false;\r\n      state.user = action.payload;\r\n    },\r\n    loginFailure: (state, action) => {\r\n      state.isLoading =false;\r\n      state.error = action.payload;\r\n    },\r\n    updateStart: (state) => {\r\n      state.isLoading = true;\r\n    },\r\n    updateSuccess: (state, action) => {\r\n      state.user = action.payload;\r\n      state.isLoading = false;\r\n    },\r\n    updateFailure: (state, action) => {\r\n      state.error = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  signUpStart,\r\n  signUpSuccess,\r\n  signUpFailure,\r\n  \r\n  loginSuccess,\r\n  loginStart,\r\n  loginFailure,\r\n\r\n  updateStart,\r\n  updateSuccess,\r\n  updateFailure,\r\n\r\n} = userSlice.actions;\r\n\r\nexport default userSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,MAAMC,YAAY,GAAG;EACnBC,KAAK,EAAE,IAAI;EACXC,SAAS,EAAE,KAAK;EAChBC,IAAI,EAAE,IAAI;EACVC,UAAU,EAAE;AACd,CAAC;AAED,MAAMC,SAAS,GAAGN,WAAW,CAAC;EAC5BO,IAAI,EAAE,MAAM;EACZN,YAAY;EACZO,QAAQ,EAAE;IACRC,WAAW,EAAEC,KAAK,IAAG;MACnBA,KAAK,CAACP,SAAS,GAAC,IAAI;IACtB,CAAC;IACDQ,aAAa,EAAEA,CAACD,KAAK,EAAEE,MAAM,KAAK;MAChCF,KAAK,CAACP,SAAS,GAAG,KAAK;MACvBO,KAAK,CAACN,IAAI,GAAGQ,MAAM,CAACC,OAAO;MAC3BH,KAAK,CAACR,KAAK,GAAG,IAAI,CAAC,CAAC;IACtB,CAAC;IAEDY,aAAa,EAAEA,CAACJ,KAAK,EAAEE,MAAM,KAAK;MAChCF,KAAK,CAACP,SAAS,GAAC,KAAK;MACrBO,KAAK,CAACR,KAAK,GAAG;QACZa,OAAO,EAAEH,MAAM,CAACC,OAAO,CAACE,OAAO;QAC/BC,MAAM,EAAEJ,MAAM,CAACC,OAAO,CAACI,QAAQ,GAAGL,MAAM,CAACC,OAAO,CAACI,QAAQ,CAACD,MAAM,GAAG;MACrE,CAAC;IACH,CAAC;IACDE,UAAU,EAAGR,KAAK,IAAK;MACrBA,KAAK,CAACP,SAAS,GAAG,IAAI;IACxB,CAAC;IACDgB,YAAY,EAAEA,CAACT,KAAK,EAAEE,MAAM,KAAK;MAC/BF,KAAK,CAACP,SAAS,GAAG,KAAK;MACvBO,KAAK,CAACN,IAAI,GAAGQ,MAAM,CAACC,OAAO;IAC7B,CAAC;IACDO,YAAY,EAAEA,CAACV,KAAK,EAAEE,MAAM,KAAK;MAC/BF,KAAK,CAACP,SAAS,GAAE,KAAK;MACtBO,KAAK,CAACR,KAAK,GAAGU,MAAM,CAACC,OAAO;IAC9B,CAAC;IACDQ,WAAW,EAAGX,KAAK,IAAK;MACtBA,KAAK,CAACP,SAAS,GAAG,IAAI;IACxB,CAAC;IACDmB,aAAa,EAAEA,CAACZ,KAAK,EAAEE,MAAM,KAAK;MAChCF,KAAK,CAACN,IAAI,GAAGQ,MAAM,CAACC,OAAO;MAC3BH,KAAK,CAACP,SAAS,GAAG,KAAK;IACzB,CAAC;IACDoB,aAAa,EAAEA,CAACb,KAAK,EAAEE,MAAM,KAAK;MAChCF,KAAK,CAACR,KAAK,GAAGU,MAAM,CAACC,OAAO;IAC9B;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EACXJ,WAAW;EACXE,aAAa;EACbG,aAAa;EAEbK,YAAY;EACZD,UAAU;EACVE,YAAY;EAEZC,WAAW;EACXC,aAAa;EACbC;AAEF,CAAC,GAAGjB,SAAS,CAACkB,OAAO;AAErB,eAAelB,SAAS,CAACmB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}